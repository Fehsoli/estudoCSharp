// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoFinalApiLoja.Data;

namespace ProjetoFinalApiLoja.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.7");

            modelBuilder.Entity("ProjetoFinalApiLoja.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CpfCliente")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Email")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EnderecoCliente")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("LojaId")
                        .HasColumnType("int");

                    b.Property<string>("NomeCliente")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("ClienteId");

                    b.HasIndex("LojaId");

                    b.ToTable("Clientes");

                    b.HasData(
                        new
                        {
                            ClienteId = 1,
                            CpfCliente = "009.009.009-09",
                            Email = "alfred@alfred.com.br",
                            EnderecoCliente = "Rua Azevedo, 900",
                            LojaId = 1,
                            NomeCliente = "Alfredo",
                            Telefone = "99999-9999"
                        },
                        new
                        {
                            ClienteId = 2,
                            CpfCliente = "010.010.010-10",
                            Email = "ataulfo@ataulfo.com.br",
                            EnderecoCliente = "Rua Miraí, 33",
                            LojaId = 1,
                            NomeCliente = "Ataulfo",
                            Telefone = "98888-8888"
                        },
                        new
                        {
                            ClienteId = 3,
                            CpfCliente = "011.011.011-11",
                            Email = "geraldo@geraldo.com.br",
                            EnderecoCliente = "Rua Peixoto, 477",
                            LojaId = 2,
                            NomeCliente = "Geraldo",
                            Telefone = "97777-7777"
                        },
                        new
                        {
                            ClienteId = 4,
                            CpfCliente = "012.012.012-12",
                            Email = "jorge@jorge.com.br",
                            EnderecoCliente = "Rua Floriano, 741",
                            LojaId = 2,
                            NomeCliente = "Jorge",
                            Telefone = "96666-6666"
                        },
                        new
                        {
                            ClienteId = 5,
                            CpfCliente = "013.013.013-13",
                            Email = "joaquim@joaquim.com.br",
                            EnderecoCliente = "Rua Paixão, 10",
                            LojaId = 3,
                            NomeCliente = "Joaquim",
                            Telefone = "95555-5555"
                        },
                        new
                        {
                            ClienteId = 6,
                            CpfCliente = "014.014.014-14",
                            Email = "maria@maria.com.br",
                            EnderecoCliente = "Rua Malaquias, 22",
                            LojaId = 3,
                            NomeCliente = "Maria",
                            Telefone = "94444-4444"
                        },
                        new
                        {
                            ClienteId = 7,
                            CpfCliente = "015.015.015-15",
                            Email = "betania@betania.com.br",
                            EnderecoCliente = "Rua Machado, 78",
                            LojaId = 4,
                            NomeCliente = "Betânia",
                            Telefone = "93333-3333"
                        },
                        new
                        {
                            ClienteId = 8,
                            CpfCliente = "016.016.016-16",
                            Email = "marcos@marcos.com.br",
                            EnderecoCliente = "Rua Pereira, 586",
                            LojaId = 4,
                            NomeCliente = "Marcos",
                            Telefone = "92222-2222"
                        });
                });

            modelBuilder.Entity("ProjetoFinalApiLoja.Models.Funcionario", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cargo")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("CpfFunc")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("EnderecoFunc")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("LojaId")
                        .HasColumnType("int");

                    b.Property<string>("NomeFunc")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<decimal>("Salario")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("FuncionarioId");

                    b.HasIndex("LojaId");

                    b.ToTable("Funcionarios");

                    b.HasData(
                        new
                        {
                            FuncionarioId = 1,
                            Cargo = "Vendedor",
                            CpfFunc = "001.001.001-01",
                            EnderecoFunc = "Rua Verdinha, 10",
                            LojaId = 1,
                            NomeFunc = "João Paulo",
                            Salario = 1100m
                        },
                        new
                        {
                            FuncionarioId = 2,
                            Cargo = "Técnico Manutenção",
                            CpfFunc = "002.002.002-02",
                            EnderecoFunc = "Rua Azulzinha, 320",
                            LojaId = 1,
                            NomeFunc = "José Aleixo",
                            Salario = 2000m
                        },
                        new
                        {
                            FuncionarioId = 3,
                            Cargo = "Vendedor",
                            CpfFunc = "003.003.003-03",
                            EnderecoFunc = "Rua Amarelhinha, 220",
                            LojaId = 2,
                            NomeFunc = "Daniel",
                            Salario = 1100m
                        },
                        new
                        {
                            FuncionarioId = 4,
                            Cargo = "Gerente",
                            CpfFunc = "004.004.004-04",
                            EnderecoFunc = "Rua Vermelhinha, 110",
                            LojaId = 2,
                            NomeFunc = "Paulo",
                            Salario = 4000m
                        },
                        new
                        {
                            FuncionarioId = 5,
                            Cargo = "Caixa",
                            CpfFunc = "005.005.005-05",
                            EnderecoFunc = "Rua Roxinha, 485",
                            LojaId = 3,
                            NomeFunc = "Matias",
                            Salario = 1500m
                        },
                        new
                        {
                            FuncionarioId = 6,
                            Cargo = "Vendedor",
                            CpfFunc = "006.006.006-06",
                            EnderecoFunc = "Rua Marronzinha, 95",
                            LojaId = 3,
                            NomeFunc = "Flávia",
                            Salario = 1100m
                        },
                        new
                        {
                            FuncionarioId = 7,
                            Cargo = "Caixa",
                            CpfFunc = "007.007.007-07",
                            EnderecoFunc = "Rua Laranjinha, 195",
                            LojaId = 4,
                            NomeFunc = "Joana",
                            Salario = 1500m
                        },
                        new
                        {
                            FuncionarioId = 8,
                            Cargo = "Técnico Manutenção",
                            CpfFunc = "008.008.008-08",
                            EnderecoFunc = "Rua Branquinha, 713",
                            LojaId = 4,
                            NomeFunc = "Augusto",
                            Salario = 2000m
                        });
                });

            modelBuilder.Entity("ProjetoFinalApiLoja.Models.Loja", b =>
                {
                    b.Property<int>("LojaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cnpj")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Endereco")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("LojaId");

                    b.ToTable("Lojas");

                    b.HasData(
                        new
                        {
                            LojaId = 1,
                            Cnpj = "01.001.001/0001-01",
                            Endereco = "Avenida Douradinho, 779",
                            RazaoSocial = "Loja MLP Records - Matriz"
                        },
                        new
                        {
                            LojaId = 2,
                            Cnpj = "01.001.001/0002-02",
                            Endereco = "Rua da Mata, 541",
                            RazaoSocial = "Loja MLP Records II"
                        },
                        new
                        {
                            LojaId = 3,
                            Cnpj = "01.001.001/0003-03",
                            Endereco = "Avenida Xavier, 872",
                            RazaoSocial = "Loja MLP Records III"
                        },
                        new
                        {
                            LojaId = 4,
                            Cnpj = "01.001.001/0004-04",
                            Endereco = "Rua Deputado Martinho, 651",
                            RazaoSocial = "Loja MLP Records IV"
                        });
                });

            modelBuilder.Entity("ProjetoFinalApiLoja.Models.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Estoque")
                        .HasColumnType("int");

                    b.Property<int>("LojaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("ProdutoId");

                    b.HasIndex("LojaId");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            ProdutoId = 1,
                            Categoria = "Disco",
                            Descricao = "Tropicalia",
                            Estoque = 8,
                            LojaId = 2,
                            Preco = 151m
                        },
                        new
                        {
                            ProdutoId = 2,
                            Categoria = "Disco",
                            Descricao = "Mamonas Assassinas",
                            Estoque = 5,
                            LojaId = 2,
                            Preco = 90m
                        },
                        new
                        {
                            ProdutoId = 3,
                            Categoria = "Disco",
                            Descricao = "Martinho da Vila",
                            Estoque = 9,
                            LojaId = 2,
                            Preco = 210m
                        },
                        new
                        {
                            ProdutoId = 4,
                            Categoria = "Eletrônico",
                            Descricao = "Toca Disco Garrard",
                            Estoque = 5,
                            LojaId = 1,
                            Preco = 590m
                        },
                        new
                        {
                            ProdutoId = 5,
                            Categoria = "Eletrônico",
                            Descricao = "Received Gradient",
                            Estoque = 5,
                            LojaId = 1,
                            Preco = 700m
                        },
                        new
                        {
                            ProdutoId = 6,
                            Categoria = "Eletrônico",
                            Descricao = "Caixa de Som Gradient",
                            Estoque = 20,
                            LojaId = 1,
                            Preco = 100m
                        },
                        new
                        {
                            ProdutoId = 7,
                            Categoria = "Eletrônico",
                            Descricao = "Equalizador Gradient",
                            Estoque = 4,
                            LojaId = 1,
                            Preco = 800m
                        },
                        new
                        {
                            ProdutoId = 8,
                            Categoria = "Eletrônico",
                            Descricao = "Amplificador Gradient",
                            Estoque = 2,
                            LojaId = 1,
                            Preco = 650m
                        },
                        new
                        {
                            ProdutoId = 9,
                            Categoria = "Eletrônico",
                            Descricao = "Toca Fita Gradient",
                            Estoque = 2,
                            LojaId = 1,
                            Preco = 390m
                        },
                        new
                        {
                            ProdutoId = 10,
                            Categoria = "CD",
                            Descricao = "Nelson Sargento",
                            Estoque = 10,
                            LojaId = 3,
                            Preco = 35m
                        },
                        new
                        {
                            ProdutoId = 11,
                            Categoria = "CD",
                            Descricao = "The Beatles",
                            Estoque = 20,
                            LojaId = 3,
                            Preco = 55m
                        },
                        new
                        {
                            ProdutoId = 12,
                            Categoria = "Eletrônico",
                            Descricao = "Gramofone",
                            Estoque = 2,
                            LojaId = 1,
                            Preco = 1189m
                        },
                        new
                        {
                            ProdutoId = 13,
                            Categoria = "Eletrônico",
                            Descricao = "Microfone Philips",
                            Estoque = 15,
                            LojaId = 1,
                            Preco = 120m
                        },
                        new
                        {
                            ProdutoId = 14,
                            Categoria = "CD",
                            Descricao = "Elis Regina",
                            Estoque = 10,
                            LojaId = 3,
                            Preco = 40m
                        },
                        new
                        {
                            ProdutoId = 15,
                            Categoria = "Fita K7",
                            Descricao = "Chitãozinho & Xororó",
                            Estoque = 14,
                            LojaId = 4,
                            Preco = 15m
                        },
                        new
                        {
                            ProdutoId = 16,
                            Categoria = "Fita K7",
                            Descricao = "Leandro & Leonardo",
                            Estoque = 12,
                            LojaId = 4,
                            Preco = 16m
                        },
                        new
                        {
                            ProdutoId = 17,
                            Categoria = "Fita K7",
                            Descricao = "Bruno & Marrone",
                            Estoque = 12,
                            LojaId = 4,
                            Preco = 15m
                        },
                        new
                        {
                            ProdutoId = 18,
                            Categoria = "Eletrônico",
                            Descricao = "Discman",
                            Estoque = 3,
                            LojaId = 1,
                            Preco = 100m
                        });
                });

            modelBuilder.Entity("ProjetoFinalApiLoja.Models.Cliente", b =>
                {
                    b.HasOne("ProjetoFinalApiLoja.Models.Loja", "Loja")
                        .WithMany("Clientes")
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loja");
                });

            modelBuilder.Entity("ProjetoFinalApiLoja.Models.Funcionario", b =>
                {
                    b.HasOne("ProjetoFinalApiLoja.Models.Loja", "Loja")
                        .WithMany("Funcionarios")
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loja");
                });

            modelBuilder.Entity("ProjetoFinalApiLoja.Models.Produto", b =>
                {
                    b.HasOne("ProjetoFinalApiLoja.Models.Loja", "Loja")
                        .WithMany("Produtos")
                        .HasForeignKey("LojaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loja");
                });

            modelBuilder.Entity("ProjetoFinalApiLoja.Models.Loja", b =>
                {
                    b.Navigation("Clientes");

                    b.Navigation("Funcionarios");

                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
